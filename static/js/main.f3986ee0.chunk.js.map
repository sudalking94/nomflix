{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","assets/noPosterSmall.png","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/Collection.js","Routes/Detail/Creator.js","Routes/Detail/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","background","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","collectionApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Collections","Body","CLink","propTypes","result","PropTypes","array","bool","isRequired","string","item","onClick","window","href","collectionId","parts","filter","CollectionPresenter","Seasons","Content","Creator","created_by","creator","profile_path","name","Season","seasons","season","TabsContainer","Tabs","TabPanelContainer","TabPanel","Backdrop","bgImage","Cover","Data","h3","ItemContainer","Divider","Overview","p","ImdbLink","EL","ExternalLink","YLink","Icon","svg","Company","CountryBox","Country","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","index","imdb_id","overview","videos","video","key","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","production_companies","company","logo_path","production_countries","country","countryCode","iso_3166_1","style","width","height","belongs_to_collection","Collection","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAIMA,EAAYC,IAAOC,IAAV,kFAMTC,EAAQF,IAAOG,KAAV,qEAKLC,EAAOJ,IAAOC,IAAV,0IAsBKI,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACR,EAAD,WACE,cAACG,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,QCtBLR,EAAYC,IAAOC,IAAV,sJAiBAO,EARA,kBACb,cAAC,EAAD,UACE,sBAAMC,KAAK,MAAMC,aAAW,UAA5B,uBCVEX,EAAYC,IAAOC,IAAV,2FAMTU,EAAOX,IAAOG,KAAV,2CACC,SAACS,GAAD,OAAWA,EAAMC,SAcbC,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,EAAD,UACE,cAACF,EAAD,CAAME,MAAOA,EAAb,SAAqBE,OChBV,OAA0B,0CCMnChB,GAAYC,IAAOC,IAAV,gDAITe,GAAQhB,IAAOC,IAAV,0MACe,SAACW,GAAD,OAAWA,EAAMK,SAQrCC,GAASlB,IAAOG,KAAV,qIAQNgB,GAAiBnB,IAAOC,IAAV,uKAIde,GAGAE,IAMAhB,GAAQF,IAAOG,KAAV,sEAKLiB,GAAOpB,IAAOG,KAAV,oFAsCKkB,GAjCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUjB,EAAjB,EAAiBA,MAAOkB,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaJ,GAAb,gBAA6BA,GAA9C,SACE,eAAC,GAAD,WACE,eAACH,GAAD,WACE,cAACH,GAAD,CACEC,MACEM,EAAQ,yCAAqCA,GAAaK,KAG9D,eAACV,GAAD,WACE,sBAAMT,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IACPc,EAJH,YAOF,cAAC,GAAD,UACGlB,EAAMuB,OAAS,GAAf,UAAuBvB,EAAMwB,UAAU,EAAG,IAA1C,OAAqDxB,IAExD,cAACc,GAAD,UAAOK,UC5DP1B,GAAYC,IAAOC,IAAV,8CA2EA8B,GAvEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACpB,mCAIGD,EACC,cAAC,EAAD,IAEA,eAAC,GAAD,WAIGH,GAAcA,EAAWH,OAAS,GACjC,cAAC,EAAD,CAASvB,MAAM,cAAf,SACG0B,EAAWK,KAAI,SAACC,GAAD,OACd,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBjC,MAAOgC,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAaZ,UAAU,EAAG,GACtCJ,SAAS,GANJY,EAAMhB,SAWlBY,GAAYA,EAASL,OAAS,GAC7B,cAAC,EAAD,CAASvB,MAAM,kBAAf,SACG4B,EAASG,KAAI,SAACC,GAAD,OACZ,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBjC,MAAOgC,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAaZ,UAAU,EAAG,GACtCJ,SAAS,GANJY,EAAMhB,SAWlBW,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,EAAD,CAASvB,MAAM,iBAAf,SACG2B,EAAQI,KAAI,SAACC,GAAD,OACX,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBjC,MAAOgC,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAaZ,UAAU,EAAG,GACtCJ,SAAS,GANJY,EAAMhB,SAWlBc,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,U,SCpE3CO,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACC,kBAAMP,GAAIQ,IAAI,sBADfD,GAED,kBAAMP,GAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,GAAIQ,IAAI,kBAHZD,GAIE,SAAC5B,GAAD,OACXqB,GAAIQ,IAAJ,gBAAiB7B,GAAM,CACrByB,OAAQ,CACNK,mBAAoB,aAPfF,GAUH,SAACG,GAAD,OACNV,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAKrBG,GACD,kBAAMb,GAAIQ,IAAI,iBADbK,GAEF,kBAAMb,GAAIQ,IAAI,eAFZK,GAGE,kBAAMb,GAAIQ,IAAI,oBAHhBK,GAIC,SAAClC,GAAD,OACVqB,GAAIQ,IAAJ,aAAc7B,GAAM,CAClByB,OAAQ,CACNK,mBAAoB,aAPfI,GAUH,SAACH,GAAD,OACNV,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAKrBI,GACO,SAACnC,GAAD,OAAQqB,GAAIQ,IAAJ,qBAAsB7B,KC7CnCoC,G,kDCGb,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,MAAQ,CACX3B,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAS,GAPM,E,4FAWnB,sCAAAyB,EAAA,+EAIcV,KAJd,uBAGuBlB,EAHvB,EAGM6B,KAAQC,QAHd,SAOcZ,KAPd,uBAMuBhB,EANvB,EAMM2B,KAAQC,QANd,UAUcZ,KAVd,iBASuBjB,EATvB,EASM4B,KAAQC,QAEVC,KAAKC,SAAS,CACZhC,aACAE,WACAD,YAdN,kDAiBI8B,KAAKC,SAAS,CACZ5B,MAAO,kCAlBb,yBAqBI2B,KAAKC,SAAS,CACZ7B,SAAS,IAtBf,6E,0EA2BA,WACE,MAA0D4B,KAAKJ,MAAvD3B,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,SAAUD,EAA9B,EAA8BA,QAASG,EAAvC,EAAuCA,MAAOD,EAA9C,EAA8CA,QAC9C,OACE,cAAC,GAAD,CACEH,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,Q,GA/CW8B,IAAMC,WCK5BnE,GAAYC,IAAOC,IAAV,8CAqEAkE,GAjEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUnC,EAAb,EAAaA,QAASoC,EAAtB,EAAsBA,YAAalC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAClB,mCAIGD,EACC,cAAC,EAAD,IAEA,eAAC,GAAD,WACGiC,GAAYA,EAASvC,OAAS,GAC7B,cAAC,EAAD,CAASvB,MAAM,kBAAf,SACG8D,EAAS/B,KAAI,SAACiC,GAAD,OACZ,cAAC,GAAD,CAEEhD,GAAIgD,EAAKhD,GACTC,SAAU+C,EAAK/B,YACfjC,MAAOgE,EAAKC,cACZ/C,OAAQ8C,EAAK7B,aACbhB,KAAM6C,EAAKE,eAAe1C,UAAU,EAAG,IALlCwC,EAAKhD,SAUjBW,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,EAAD,CAASvB,MAAM,gBAAf,SACG2B,EAAQI,KAAI,SAACiC,GAAD,OACX,cAAC,GAAD,CAEEhD,GAAIgD,EAAKhD,GACTC,SAAU+C,EAAK/B,YACfjC,MAAOgE,EAAKC,cACZ/C,OAAQ8C,EAAK7B,aACbhB,KAAM6C,EAAKE,eAAe1C,UAAU,EAAG,IALlCwC,EAAKhD,SAUjB+C,GAAeA,EAAYxC,OAAS,GACnC,cAAC,EAAD,CAASvB,MAAM,eAAf,SACG+D,EAAYhC,KAAI,SAACiC,GAAD,OACf,cAAC,GAAD,CAEEhD,GAAIgD,EAAKhD,GACTC,SAAU+C,EAAK/B,YACfjC,MAAOgE,EAAKC,cACZ/C,OAAQ8C,EAAK7B,aACbhB,KAAM6C,EAAKE,eAAe1C,UAAU,EAAG,IALlCwC,EAAKhD,SAUjBc,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,UC9DlCqC,G,kDCGb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,MAAQ,CACXS,SAAU,KACVnC,QAAS,KACToC,YAAa,KACblC,SAAS,EACTC,MAAO,MAPQ,E,4FAWnB,sCAAAwB,EAAA,+EAIcJ,KAJd,uBAGuBY,EAHvB,EAGMP,KAAQC,QAHd,SAOcN,KAPd,uBAMuBvB,EANvB,EAMM4B,KAAQC,QANd,UAUcN,KAVd,iBASuBa,EATvB,EASMR,KAAQC,QAEVC,KAAKC,SAAS,CAAEI,WAAUnC,UAASoC,gBAXvC,kDAaIN,KAAKC,SAAS,CACZ5B,MAAO,+BAdb,yBAiBI2B,KAAKC,SAAS,CAAE7B,SAAS,IAjB7B,6E,0EAqBA,WACE,MAA2D4B,KAAKJ,MAAxDS,EAAR,EAAQA,SAAUnC,EAAlB,EAAkBA,QAASoC,EAA3B,EAA2BA,YAAalC,EAAxC,EAAwCA,QAASC,EAAjD,EAAiDA,MACjD,OACE,cAAC,GAAD,CACEgC,SAAUA,EACVnC,QAASA,EACToC,YAAaA,EACblC,QAASA,EACTC,MAAOA,Q,GAzCW6B,IAAMC,WCA1BQ,GAAS1E,IAAO2E,OAAV,kRAcNC,GAAO5E,IAAO6E,GAAV,8CAIJC,GAAO9E,IAAO+E,GAAV,yKAKJ,SAACnE,GAAD,OAAYA,EAAMoE,QAAU,UAAY,iBAIxCC,GAAQjF,YAAOkF,IAAPlF,CAAH,mHAOImF,gBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,cAACV,GAAD,UACE,eAACE,GAAD,WACE,cAACE,GAAD,CAAME,QAAsB,MAAbI,EAAf,SACE,cAACH,GAAD,CAAOtD,GAAG,IAAV,sBAEF,cAACmD,GAAD,CAAME,QAAsB,QAAbI,EAAf,SACE,cAACH,GAAD,CAAOtD,GAAG,MAAV,kBAEF,cAACmD,GAAD,CAAME,QAAsB,YAAbI,EAAf,SACE,cAACH,GAAD,CAAOtD,GAAG,UAAV,8BCvCF5B,GAAYC,IAAOC,IAAV,kDAITqF,GAAOtF,IAAOuF,KAAV,oEAKJC,GAAQxF,IAAOyF,MAAV,+EAmFIC,GA7ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAzD,EAHsB,EAGtBA,QACA0D,EAJsB,EAItBA,WACAC,EALsB,EAKtBA,aACA1D,EANsB,EAMtBA,MACA2D,EAPsB,EAOtBA,WAPsB,OAStB,eAAC,GAAD,WAIE,cAACT,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,MAGb5D,EACC,cAAC,EAAD,IAEA,qCACGwD,GAAgBA,EAAa9D,OAAS,GACrC,cAAC,EAAD,CAASvB,MAAM,gBAAf,SACGqF,EAAatD,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAEEhB,GAAIgB,EAAMhB,GACVC,SAAUe,EAAMC,YAChBjC,MAAOgC,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAaZ,UAAU,EAAG,GACtCJ,SAAS,GANJY,EAAMhB,SAWlBsE,GAAaA,EAAU/D,OAAS,GAC/B,cAAC,EAAD,CAASvB,MAAM,kBAAf,SACGsF,EAAUvD,KAAI,SAACiC,GAAD,OACb,cAAC,GAAD,CAEEhD,GAAIgD,EAAKhD,GACTC,SAAU+C,EAAK/B,YACfjC,MAAOgE,EAAKC,cACZ/C,OAAQ8C,EAAK7B,aACbhB,KACE6C,EAAKE,gBAAkBF,EAAKE,eAAe1C,UAAU,EAAG,IANrDwC,EAAKhD,SAYjBc,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,IACxCwD,GACCD,GACqB,IAArBC,EAAU/D,QACc,IAAxB8D,EAAa9D,QACX,cAAC,GAAD,CAASd,KAAK,gBAAgBF,MAAM,mBClFjCuF,G,kDCGb,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAURkF,aAAe,SAACO,GACdA,EAAMC,iBAEa,KADI,EAAK3C,MAApBkC,YAEN,EAAKU,gBAfU,EAmBnBR,WAAa,SAACM,GACZ,IACYH,EACRG,EADFG,OAAUN,MAEZ,EAAKlC,SAAS,CACZ6B,WAAYK,KAxBG,EA4BnBK,aA5BmB,sBA4BJ,oCAAA3C,EAAA,6DACLiC,EAAe,EAAKlC,MAApBkC,WACR,EAAK7B,SAAS,CAAE7B,SAAS,IAFZ,kBAMDe,GAAiB2C,GANhB,uBAKQF,EALR,EAKT9B,KAAQC,QALC,SASDN,GAAaqC,GATZ,gBAQQD,EARR,EAQT/B,KAAQC,QAEV,EAAKE,SAAS,CACZ2B,eACAC,cAZS,kDAeX,EAAK5B,SAAS,CAAE5B,MAAO,wBAfZ,yBAiBX,EAAK4B,SAAS,CAAE7B,SAAS,IAjBd,6EA1Bb,EAAKwB,MAAQ,CACXgC,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ1D,SAAS,EACTC,MAAO,MAPQ,E,0CAiDnB,WACE,MAAgE2B,KAAKJ,MAA7DgC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,WAAY1D,EAA7C,EAA6CA,QAASC,EAAtD,EAAsDA,MACtD,OACE,cAAC,GAAD,CACEuD,aAAcA,EACdC,UAAWA,EACXzD,QAASA,EACTC,MAAOA,EACPyD,WAAYA,EACZC,aAAc/B,KAAK+B,aACnBC,WAAYhC,KAAKgC,iB,GA5DK9B,IAAMC,W,sDCE9BuC,GAAczG,IAAOC,IAAV,8FAMXyE,GAAS1E,IAAOG,KAAV,qPAUNuG,GAAO1G,IAAOC,IAAV,kHAMJ0G,GAAQ3G,YAAOkF,IAAPlF,CAAH,sFAKLE,GAAQF,IAAOG,KAAV,6FAKLa,GAAQhB,IAAOC,IAAV,gQACe,SAACW,GAAD,OAAWA,EAAMK,SAY3CkE,IAAWyB,UAAY,CACrBC,OAAQC,KAAUC,MAClB5E,QAAS2E,KAAUE,KAAKC,WACxB7E,MAAO0E,KAAUI,QAGJ/B,I,sGAAAA,gBAAW,gBAAG0B,EAAH,EAAGA,OAAH,EAAWzE,MAAX,SAAkBD,QAExC,8CAEA,eAAC,GAAD,WACE,cAAC,GAAD,0BACA,cAACuE,GAAD,UACGG,EAAOxE,KAAI,SAAC8E,GAAD,OACV,eAACR,GAAD,CACEhF,GAAE,iBAAYwF,EAAK7F,IAEnB8F,QAAS,WACPC,OAAOhC,SAASiC,KAAhB,iBAAiCH,EAAK7F,KAJ1C,UAOE,cAAC,GAAD,CACEL,MACEkG,EAAK5E,YAAL,yCACsC4E,EAAK5E,aACvCX,KAGR,cAAC,GAAD,UACGuF,EAAK3E,eAAeX,OAAS,GAA7B,UACMsF,EAAK3E,eAAeV,UAAU,EAAG,IADvC,OAEGqF,EAAK3E,mBAfN2E,EAAK7F,eCxBPmF,G,kDAtCb,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,MAAQ,CACXrC,GAAI,KACJuF,OAAQ,KACRzE,MAAO,KACPD,SAAS,GANM,E,4FAUnB,oCAAAyB,EAAA,+DAC+BG,KAAKnD,MAA1B2G,EADV,EACUA,aAAcjG,EADxB,EACwBA,GADxB,kBAMcmC,GAA+B8D,GAN7C,gBAOIV,GAFiBA,EALrB,EAKMhD,KAAQ2D,OAEMC,QAAO,SAACN,GAAD,OAAUA,EAAK7F,KAAOA,KAC7CyC,KAAKC,SAAS,CAAE6C,WARpB,kDAUI9C,KAAKC,SAAS,CAAE5B,MAAO,yBAV3B,yBAYI2B,KAAKC,SAAS,CAAE7B,SAAS,EAAOb,OAZpC,6E,0EAeA,WACE,MAAuCyC,KAAKJ,MAApCkD,EAAR,EAAQA,OAAQzE,EAAhB,EAAgBA,MAAOD,EAAvB,EAAuBA,QAASb,EAAhC,EAAgCA,GAChC,OACE,cAACoG,GAAD,CACEb,OAAQA,EACRzE,MAAOA,EACPD,QAASA,EACTb,GAAIA,Q,GAjCc2C,IAAMC,WCA1ByD,GAAU3H,IAAOC,IAAV,sFAMPyE,GAAS1E,IAAOG,KAAV,uPAWNuG,GAAO1G,IAAOC,IAAV,oHAOJC,GAAQF,IAAOG,KAAV,+FAKLa,GAAQhB,IAAOC,IAAV,6NACe,SAACW,GAAD,OAAWA,EAAMK,SASrC2G,GAAU5H,IAAOC,IAAV,oDA6BE4H,GAzBC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,OAAH,OACd,eAACc,GAAD,WACE,cAAC,GAAD,uBACA,cAAC,GAAD,UACGd,EAAOiB,YACNjB,EAAOiB,WAAWzF,KAAI,SAAC0F,GAAD,OACpB,eAACH,GAAD,WACE,cAAC,GAAD,CACE3G,MACE8G,EAAQC,aAAR,yCACsCD,EAAQC,cAC1CpG,KAGR,cAAC,GAAD,UACGmG,EAAQE,KAAKpG,OAAS,GAAtB,UACMkG,EAAQE,KAAKnG,UAAU,EAAG,IADhC,OAEGiG,EAAQE,SAXFF,EAAQzG,aCjD1BqG,GAAU3H,IAAOC,IAAV,sFAMPyE,GAAS1E,IAAOG,KAAV,uPAWNuG,GAAO1G,IAAOC,IAAV,oHAOJC,GAAQF,IAAOG,KAAV,+FAKLa,GAAQhB,IAAOC,IAAV,6NACe,SAACW,GAAD,OAAWA,EAAMK,SASrC2G,GAAU5H,IAAOC,IAAV,oDA6BEiI,GAzBA,SAAC,GAAD,IAAGrB,EAAH,EAAGA,OAAH,OACb,eAAC,GAAD,WACE,cAAC,GAAD,sBACA,cAAC,GAAD,UACGA,EAAOsB,SACNtB,EAAOsB,QAAQ9F,KAAI,SAAC+F,GAAD,OACjB,eAAC,GAAD,WACE,cAAC,GAAD,CACEnH,MACEmH,EAAO7F,YAAP,yCACsC6F,EAAO7F,aACzCX,KAGR,cAAC,GAAD,UACGwG,EAAOH,KAAKpG,OAAS,GAArB,UACMuG,EAAOH,KAAKnG,UAAU,EAAG,IAD/B,OAEGsG,EAAOH,SAXDG,EAAO9G,aCvCzB+G,GAAgBrI,YAAOsI,KAAPtI,CAAH,+CAGbuI,GAAoBvI,YAAOwI,KAAPxI,CAAH,4BAEjBD,GAAYC,IAAOC,IAAV,sHAOTwI,GAAWzI,IAAOC,IAAV,oQAMY,SAACW,GAAD,OAAWA,EAAM8H,WAQrCd,GAAU5H,IAAOC,IAAV,uHAQP0I,GAAQ3I,IAAOC,IAAV,sLAEe,SAACW,GAAD,OAAWA,EAAM8H,WAOrCE,GAAO5I,IAAOC,IAAV,mEAKJC,GAAQF,IAAO6I,GAAV,kDAILC,GAAgB9I,IAAOC,IAAV,mEAKb6E,GAAO9E,IAAOG,KAAV,4BAEJ4I,GAAU/I,IAAOG,KAAV,iDAIP6I,GAAWhJ,IAAOiJ,EAAV,0IASRC,GAAWlJ,IAAOC,IAAV,gNAWRkJ,GAAKnJ,YAAOoJ,KAAPpJ,CAAH,qDAIFqJ,GAAQrJ,IAAOC,IAAV,qLAULqJ,GAAOtJ,IAAOuJ,IAAV,mFAKJvI,GAAQhB,IAAOC,IAAV,qMACe,SAACW,GAAD,OAAWA,EAAMK,SAQrCb,GAAOJ,IAAOC,IAAV,4IAOJuJ,GAAUxJ,IAAOC,IAAV,4BACPwJ,GAAazJ,IAAOC,IAAV,gDAGVyJ,GAAU1J,IAAOC,IAAV,oDAuJE0J,GAnJS,SAAC,GAAD,IAAG9C,EAAH,EAAGA,OAAQ1E,EAAX,EAAWA,QAAX,EAAoBC,MAApB,OACtBD,EACE,mCACE,cAAC,EAAD,MAGF,eAAC,GAAD,WACE,cAACsG,GAAD,CACEC,QAAO,6CAAwC7B,EAAO+C,iBAExD,eAAC,GAAD,WACE,cAACjB,GAAD,CACED,QACE7B,EAAOtE,YAAP,6CAC0CsE,EAAOtE,aAC7CX,KAGR,eAACgH,GAAD,WACE,cAAC,GAAD,UACG/B,EAAOrE,eACJqE,EAAOrE,eACPqE,EAAOtC,gBAEb,eAACuE,GAAD,WACE,cAAC,GAAD,UACGjC,EAAOnE,aACJmE,EAAOnE,aAAaZ,UAAU,EAAG,GACjC+E,EAAOrC,eAAe1C,UAAU,EAAG,KAEzC,cAACiH,GAAD,qBACA,eAAC,GAAD,WACGlC,EAAOgD,QAAUhD,EAAOgD,QAAUhD,EAAOiD,iBAAiB,GAD7D,UAGA,cAACf,GAAD,qBACA,cAAC,GAAD,UACGlC,EAAOkD,QACNlD,EAAOkD,OAAO1H,KAAI,SAAC2H,EAAOC,GAAR,OAChBA,IAAUpD,EAAOkD,OAAOlI,OAAS,EAC7BmI,EAAM/B,KADV,UAEO+B,EAAM/B,KAFb,YAKLpB,EAAOqD,SAAWrD,EAAOqD,QAAQrI,OAAS,GACzC,qCACE,cAACkH,GAAD,qBACA,cAACI,GAAD,CAAI7B,KAAI,qCAAgCT,EAAOqD,QAAvC,KAAR,SACE,cAAChB,GAAD,2BAKR,cAACF,GAAD,UAAWnC,EAAOsD,WAClB,eAAC9B,GAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,6BACA,cAAC,KAAD,iCACA,cAAC,KAAD,sCAGF,cAACE,GAAD,UACG1B,EAAOuD,OAAOtG,QAAQzB,KAAI,SAACgI,GAAD,OACzB,cAAClB,GAAD,CAEE7B,KAAI,0CAAqC+C,EAAMC,KAFjD,SAIE,eAACjB,GAAD,WACE,eAACC,GAAD,CACEiB,MAAM,6BACNC,UAAU,UACVC,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,UAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,qGAEJ,sBACEH,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,0CAGLV,EAAMpC,SAxBJoC,EAAM/I,SA6BjB,cAACiH,GAAD,UACE,cAAC,GAAD,UACG1B,EAAOmE,qBAAqB3I,KAAI,SAAC4I,GAAD,OAC/B,eAACzB,GAAD,WACE,cAAC,GAAD,CACEvI,MACEgK,EAAQC,UAAR,yCACsCD,EAAQC,WAC1CtJ,KAGPqJ,EAAQhD,OARGgD,EAAQ3J,WAa5B,cAACiH,GAAD,UACE,cAACkB,GAAD,UACG5C,EAAOsE,qBAAqB9I,KAAI,SAAC+I,EAASnB,GAAV,OAC/B,cAACP,GAAD,UACE,cAAC,KAAD,CACE2B,YAAaD,EAAQE,WACrBC,MAAO,CACLC,MAAO,MACPC,OAAQ,OAEVnL,MAAO8K,EAAQnD,KACfsB,KAAG,KAROU,aAerBpD,EAAO6E,uBACN,mCACE,cAACC,GAAD,CACEpE,aAAcV,EAAO6E,sBAAsBpK,GAC3CA,GAAIuF,EAAOvF,OAIhBuF,EAAOiB,YAAc,cAAC,GAAD,CAASjB,OAAQA,IACtCA,EAAOsB,SAAW,cAAC,GAAD,CAAQtB,OAAQA,cCjR9B+E,G,kDCGb,WAAYhL,GAAQ,IAAD,sBACjB,cAAMA,GACN,IACcwE,EACVxE,EADFyE,SAAYD,SAHG,OAKjB,EAAKzB,MAAQ,CACXkD,OAAQ,KACRzE,MAAO,KACPD,SAAS,EACTT,QAAS0D,EAASyG,SAAS,YATZ,E,4FAanB,0CAAAjI,EAAA,2DAMMG,KAAKnD,MAHKU,EAHhB,EAEIwK,MACE/I,OAAUzB,GAEDyK,EALf,EAKIC,QAAWD,KAELrK,EAAYqC,KAAKJ,MAAjBjC,QACFuK,EAAWC,SAAS5K,IACtB6K,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,UAYMlF,EAAS,KAZf,UAcQnF,EAdR,kCAegCwB,GAAsB+I,GAftD,iBAeepF,EAff,EAeShD,KAfT,yCAiBgCL,GAAiByI,GAjBjD,iBAiBepF,EAjBf,EAiBShD,KAjBT,0DAoBIE,KAAKC,SAAS,CAAE5B,MAAO,yBApB3B,yBAsBI2B,KAAKC,SAAS,CAAE7B,SAAS,EAAO0E,WAtBpC,6E,0EA0BA,WACE,MAAmC9C,KAAKJ,MAAhCkD,EAAR,EAAQA,OAAQzE,EAAhB,EAAgBA,MAAOD,EAAvB,EAAuBA,QACvB,OAAO,cAAC,GAAD,CAAiB0E,OAAQA,EAAQzE,MAAOA,EAAOD,QAASA,Q,GA1CrC8B,IAAMC,WCoBrBkI,GAhBA,kBACb,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,cAAC,IAAD,CAAOJ,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC,cAAC,IAAD,CAAOL,KAAK,aAAaC,OAAK,EAACC,UAAWI,KAC1C,cAAC,IAAD,CAAON,KAAK,YAAYC,OAAK,EAACC,UAAWI,KACzC,cAAC,IAAD,CAAUC,KAAK,IAAIjL,GAAG,e,SCGfkL,GAlBMC,YAAH,ybACZC,MCWSC,G,4JAVb,WACE,OACE,qCACE,cAAC,GAAD,IACA,cAACC,GAAD,W,GALU/I,aCClBgJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f3986ee0.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport background from \"../assets/noPosterSmall.png\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : background\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n// import Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    {/* <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet> */}\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {/* <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet> */}\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"12f080a359d4ab1a2454035d65c71337\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const collectionApi = {\n  collectionDetail: (id) => api.get(`collection/${id}`),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nclass HomeContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nowPlaying: null,\n      upcoming: null,\n      popular: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n// import Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    {/* <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet> */}\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nclass TVContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topRated: null,\n      popular: null,\n      airingToday: null,\n      loading: true,\n      error: null,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n// import Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    {/* <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet> */}\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nclass SearchContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      loading: false,\n      error: null,\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport background from \"../../assets/noPosterSmall.png\";\n\nconst Collections = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.span`\n  display: flex;\n  width:max-content;\n  justify-content: start\n  align-items:center;  \n  padding: 6px 12px;\n  background-color: rgb(138, 143, 143, 0.7);\n  border-radius: 5px;\n  text-shadow: 2px 2px 2px black;\n`;\nconst Body = styled.div`\n  margin-top: 5px;\n  margin-left: 5px;\n  display: flex;\n  justify-content: start;\n`;\nconst CLink = styled(Link)`\n  display: block;\n  width: 128px;\n  margin-right: 5px;\n`;\nconst Title = styled.span`\n  display: block;\n  text-align: center;\n  margin-bottom: 3px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  width: 128px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nwithRouter.propTypes = {\n  result: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default withRouter(({ result, error, loading }) =>\n  loading ? (\n    <span>loading...</span>\n  ) : (\n    <Collections>\n      <Header>Collections</Header>\n      <Body>\n        {result.map((item) => (\n          <CLink\n            to={`/movie/${item.id}`}\n            key={item.id}\n            onClick={() => {\n              window.location.href = `/movie/${item.id}`;\n            }}\n          >\n            <Image\n              bgUrl={\n                item.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${item.poster_path}`\n                  : background\n              }\n            />\n            <Title>\n              {item.original_title.length > 18\n                ? `${item.original_title.substring(0, 18)}...`\n                : item.original_title}\n            </Title>\n          </CLink>\n        ))}\n      </Body>\n    </Collections>\n  )\n);\n","import React from \"react\";\nimport { collectionApi } from \"../../api\";\nimport CollectionPresenter from \"./CollectionPresenter\";\n\nclass Collections extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      result: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const { collectionId, id } = this.props;\n\n    try {\n      let {\n        data: { parts: result },\n      } = await collectionApi.collectionDetail(collectionId);\n      result = result.filter((item) => item.id !== id);\n      this.setState({ result });\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, id });\n    }\n  }\n  render() {\n    const { result, error, loading, id } = this.state;\n    return (\n      <CollectionPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        id={id}\n      />\n    );\n  }\n}\n\nexport default Collections;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport background from \"../../assets/noPosterSmall.png\";\n\nconst Seasons = styled.div`\n  margin-top: 10px;\n  width: 100%;\n  overflow: auto;\n`;\n\nconst Header = styled.span`\n  display: flex;\n  width:max-content;\n  justify-content: start\n  align-items:center;  \n  padding: 6px 12px;\n  background-color: rgb(138, 143, 143, 0.7);\n  border-radius: 5px;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Body = styled.div`\n  margin-top: 5px;\n  margin-left: 5px;\n  display: flex;\n  justify-content: start;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  text-align: center;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  width: 128px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Content = styled.div`\n  margin-right: 5px;\n`;\n\nconst Creator = ({ result }) => (\n  <Seasons>\n    <Header>Creators</Header>\n    <Body>\n      {result.created_by &&\n        result.created_by.map((creator) => (\n          <Content key={creator.id}>\n            <Image\n              bgUrl={\n                creator.profile_path\n                  ? `https://image.tmdb.org/t/p/w300${creator.profile_path}`\n                  : background\n              }\n            />\n            <Title>\n              {creator.name.length > 18\n                ? `${creator.name.substring(0, 18)}...`\n                : creator.name}\n            </Title>\n          </Content>\n        ))}\n    </Body>\n  </Seasons>\n);\n\nexport default Creator;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport background from \"../../assets/noPosterSmall.png\";\n\nconst Seasons = styled.div`\n  margin-top: 10px;\n  width: 100%;\n  overflow: auto;\n`;\n\nconst Header = styled.span`\n  display: flex;\n  width:max-content;\n  justify-content: start\n  align-items:center;  \n  padding: 6px 12px;\n  background-color: rgb(138, 143, 143, 0.7);\n  border-radius: 5px;\n  text-shadow: 2px 2px 2px black;\n`;\n\nconst Body = styled.div`\n  margin-top: 5px;\n  margin-left: 5px;\n  display: flex;\n  justify-content: start;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  text-align: center;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  width: 128px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Content = styled.div`\n  margin-right: 5px;\n`;\n\nconst Season = ({ result }) => (\n  <Seasons>\n    <Header>Seasons</Header>\n    <Body>\n      {result.seasons &&\n        result.seasons.map((season) => (\n          <Content key={season.id}>\n            <Image\n              bgUrl={\n                season.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${season.poster_path}`\n                  : background\n              }\n            />\n            <Title>\n              {season.name.length > 18\n                ? `${season.name.substring(0, 18)}...`\n                : season.name}\n            </Title>\n          </Content>\n        ))}\n    </Body>\n  </Seasons>\n);\n\nexport default Season;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n// import Helmet from \"react-helmet\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport { ExternalLink } from \"react-external-link\";\nimport \"./react-tabs.css\";\nimport Loader from \"../../Components/Loader\";\nimport Collections from \"../Collection/Collection\";\nimport background from \"../../assets/noPosterSmall.png\";\nimport Creator from \"./Creator\";\nimport Season from \"./Season\";\n\nconst TabsContainer = styled(Tabs)`\n  height: 15em;\n`;\nconst TabPanelContainer = styled(TabPanel)``;\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  overflow: auto;\n  height: 6em;\n`;\n\nconst ImdbLink = styled.div`\n  display: flex;\n  width: 35px;\n  justify-content: center;\n  align-items: center;\n  background-color: #e3c22f;\n  color: black;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\nconst EL = styled(ExternalLink)`\n  width: max-content;\n`;\n\nconst YLink = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  margin-bottom: 5px;\n  margin-left: 3px;\n  &:hover {\n    color: yellow;\n  }\n`;\nconst Icon = styled.svg`\n  width: 2em;\n  height: 2em;\n  margin-right: 5px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 100px;\n  width: 100px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Company = styled.div``;\nconst CountryBox = styled.div`\n  display: flex;\n`;\nconst Country = styled.div`\n  margin-right: 5px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : background\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.imdb_id && result.imdb_id.length > 0 && (\n              <>\n                <Divider>•</Divider>\n                <EL href={`https://www.imdb.com/title/${result.imdb_id}/`}>\n                  <ImdbLink>IMdb</ImdbLink>\n                </EL>\n              </>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <TabsContainer>\n            <TabList>\n              <Tab>YouTube Videos</Tab>\n              <Tab>Production Company</Tab>\n              <Tab>Production Countries</Tab>\n            </TabList>\n\n            <TabPanelContainer>\n              {result.videos.results.map((video) => (\n                <EL\n                  key={video.id}\n                  href={`https://www.youtube.com/watch?v=${video.key}`}\n                >\n                  <YLink>\n                    <Icon\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-6 w-6\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\n                      />\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </Icon>\n                    {video.name}\n                  </YLink>\n                </EL>\n              ))}\n            </TabPanelContainer>\n            <TabPanelContainer>\n              <Grid>\n                {result.production_companies.map((company) => (\n                  <Company key={company.id}>\n                    <Image\n                      bgUrl={\n                        company.logo_path\n                          ? `https://image.tmdb.org/t/p/w200${company.logo_path}`\n                          : background\n                      }\n                    ></Image>\n                    {company.name}\n                  </Company>\n                ))}\n              </Grid>\n            </TabPanelContainer>\n            <TabPanelContainer>\n              <CountryBox>\n                {result.production_countries.map((country, index) => (\n                  <Country key={index}>\n                    <ReactCountryFlag\n                      countryCode={country.iso_3166_1}\n                      style={{\n                        width: \"3em\",\n                        height: \"3em\",\n                      }}\n                      title={country.name}\n                      svg\n                    />\n                  </Country>\n                ))}\n              </CountryBox>\n            </TabPanelContainer>\n          </TabsContainer>\n          {result.belongs_to_collection && (\n            <>\n              <Collections\n                collectionId={result.belongs_to_collection.id}\n                id={result.id}\n              ></Collections>\n            </>\n          )}\n          {result.created_by && <Creator result={result}></Creator>}\n          {result.seasons && <Season result={result}></Season>}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Header from \"./Header\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/movie/:id\" exact component={Detail} />\n        <Route path=\"/show/:id\" exact component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles></GlobalStyles>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}